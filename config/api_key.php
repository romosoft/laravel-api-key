<?php

return [
    /*
    |--------------------------------------------------------------------------
    | API密钥表名
    |--------------------------------------------------------------------------
    |
    | 此选项控制API密钥存储在数据库中的表名
    |
    */
    'table_name' => 'api_keys',

    /*
    |--------------------------------------------------------------------------
    | API密钥长度
    |--------------------------------------------------------------------------
    |
    | 生成的API密钥的长度（字符数）
    |
    */
    'key_length' => 64,

    /*
    |--------------------------------------------------------------------------
    | API密钥头信息名称
    |--------------------------------------------------------------------------
    |
    | API请求中使用的头信息名称，用于传递API密钥
    |
    */
    'header_name' => 'X-API-KEY',

    /*
    |--------------------------------------------------------------------------
    | API密钥默认过期时间（天）
    |--------------------------------------------------------------------------
    |
    | 新创建的API密钥默认的有效期（天数）。设置为null表示永不过期。
    |
    */
    'expires_in_days' => 365,

    /*
    |--------------------------------------------------------------------------
    | Filament集成
    |--------------------------------------------------------------------------
    |
    | 是否启用Filament集成，提供API密钥管理界面
    |
    */
    'enable_filament_integration' => true,

    /*
    |--------------------------------------------------------------------------
    | 路由配置
    |--------------------------------------------------------------------------
    |
    | API密钥路由的配置
    |
    */
    'routes' => [
        // 是否启用API路由
        'enabled' => true,
        
        // API路由前缀
        'prefix' => 'api',
        
        // API路由中间件
        'middleware' => ['api'],
    ],

    /*
    |--------------------------------------------------------------------------
    | 用户模型
    |--------------------------------------------------------------------------
    |
    | 指定应用程序中的用户模型，用于建立与API密钥的关系
    |
    */
    'user_model' => 'App\\Models\\User',

    /*
    |--------------------------------------------------------------------------
    | 密钥认证策略
    |--------------------------------------------------------------------------
    |
    | 指定验证API密钥时使用的策略
    | 选项: 'database' - 每次请求都检查数据库
    |       'cache' - 使用缓存加速验证过程
    |
    */
    'auth_strategy' => 'database',

    /*
    |--------------------------------------------------------------------------
    | 缓存配置
    |--------------------------------------------------------------------------
    |
    | 当auth_strategy设置为'cache'时的缓存配置
    |
    */
    'cache' => [
        // 缓存前缀
        'prefix' => 'api_key_',
        
        // 缓存时间（分钟）
        'ttl' => 60,
    ],
]; 